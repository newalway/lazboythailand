<?php

namespace ProjectBundle\Repository;

use Gedmo\Tree\Entity\Repository\NestedTreeRepository;
#extends \Doctrine\ORM\EntityRepository

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Intl\Locale;

/**
 * NewsCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsCategoryRepository extends NestedTreeRepository
{
	private $qb;

	public function findDataByRootId($root_id=false, $locale=false)
	{
		$locale = ($locale) ? $locale : Locale::getDefault();

		$this->qb = $this->createQueryBuilder('c');
		$this->qb->select('c', 'ct')
			->leftjoin('c.translations', 'ct', "WITH", "ct.locale=:locale")
			->orderBy('c.root, c.lft', 'ASC')
			->setParameter('locale', $locale);

		if($root_id){
			$this->qb->where('c.root = '.$root_id);
		}

		//remove level 0
		$this->qb->andWhere("c.lvl <> 0");

		return $this->qb;
	}

	public function findChildrenByParentId($parent_id, $locale=false)
	{
		$locale = ($locale) ? $locale : Locale::getDefault();

		$this->qb = $this->createQueryBuilder('c');
		$this->qb->select('c', 'ct')
			->leftjoin('c.translations', 'ct', "WITH", "ct.locale=:locale")
			->where('c.parent = '.$parent_id)
			->orderBy('c.root, c.lft', 'ASC')
			->setParameter('locale', $locale);

		//remove level 0
		$this->qb->andWhere("c.lvl <> 0");

		return $this->qb;
	}

	public function findAllActiveData($root_id=false,$locale=false)
	{
		$locale = ($locale) ? $locale : Locale::getDefault();

		$this->qb = $this->createQueryBuilder('c');
		$this->qb
			->select('c','ct')
			->leftjoin('c.translations', 'ct', "WITH", "ct.locale=:locale")
			->leftJoin('c.newss','n')
			->orderBy('c.root, c.lft', 'ASC')
			->setParameter('locale', $locale);

		if($root_id){
			$this->qb->andWhere('c.root = '.$root_id);
		}

		//remove level 0
		$this->qb->andWhere("c.lvl <> 0");

		return $this->qb;
	}
}
