<?php

namespace ProjectBundle\Repository;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;
use Symfony\Component\Intl\Locale;

/**
 * PromotionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends \Doctrine\ORM\EntityRepository
{
	public function findAllData($arr_query_data=false)
  {
    $qb = $this->createQueryBuilder('n');
				// ->orderBy('n.position', 'ASC')
        //         ->addOrderBy('n.startDate', 'DESC')
        //         ->addOrderBy('n.createdAt', 'DESC');
        $qb->leftJoin('n.translations', 'nt')
          ->select('n', 'nt')
          ->orderBy('n.startDate', 'DESC')
          ->addOrderBy('n.createdAt', 'DESC');
    $q = $arr_query_data['q'];
    if($q){
      $qb->where($qb->expr()->orX(
        $qb->expr()->like('nt.title', ':query'),
        $qb->expr()->like('nt.shortDesc', ':query'),
        $qb->expr()->like('nt.description', ':query')
      ))
      ->setParameter('query', '%'.$q.'%');
    }
    return $qb;
  }

	public function findAllActiveData($arr_query_data=false,$locale=false)
	{
    $locale = ($locale) ? $locale : Locale::getDefault();
		 $qb = $this->findAllData($arr_query_data)
            ->andWhere('n.status = 1 ')
            ->andWhere("nt.locale = '$locale'")
            ->andWhere('(
              ((n.isEndDate = 1 AND NOW() BETWEEN n.startDate AND n.endDate))
                OR n.isEndDate = 0 AND NOW() >= n.startDate)
            ')
            ->groupBy('n.id');
     return $qb;
	}

	public function getActiveDataById($id)
  {
    $qb = $this->findAllActiveData();
    $qb->andWhere($qb->expr()->andX(
          $qb->expr()->eq('n.id', ':id')
        ))
        ->setParameter('id',$id)
      ;
    return $qb;
  }
  public function getActiveDataRecent($id)
  {
    $qb = $this->findAllActiveData();
    $qb->andWhere($qb->expr()->andX(
          $qb->expr()->neq('n.id', ':id')
        ))
        ->setParameter('id',$id)
      ;
    return $qb;
  }

  	public function findAllActiveDataByCustomShow()
  	{
		$qb = $this->findAllActiveData()->andWhere('n.statusCustomShow = 1 ');
		return $qb;
  	}
}
