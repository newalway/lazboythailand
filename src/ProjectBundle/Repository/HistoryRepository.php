<?php

namespace ProjectBundle\Repository;
use Symfony\Component\Intl\Locale;
/**
 * HistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HistoryRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllData($arr_query_data=false)
    {
        $qb = $this->createQueryBuilder('h')
                ->orderBy('h.position', 'ASC')
                ->addOrderBy('h.createdAt', 'DESC');
        $q = $arr_query_data['q'];
        if($q){
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('h.title', ':query'),
                $qb->expr()->like('h.description', ':query')
            ))
            ->setParameter('query', '%'.$q.'%');
        }
        return $qb;
    }

    public function findAllActiveData($locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();

        $qb = $this->findAllData();
        $qb->join('h.translations', 'ht')
				->select('h', 'ht')
				->orderBy('h.position', 'ASC')
				->addOrderBy('h.createdAt', 'DESC');

        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('h.status', ':status'),
            $qb->expr()->like('ht.locale', ':locale')
        ))
        ->setParameters(array(
                'status' => 1,
        		'locale' => $locale
            ))
        ;
        return $qb;
    }

    public function getActiveDataByRecent($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->notLike('h.id', ':id')
        ))
        ->setParameter('id', $id);
        return $qb;
    }

    public function getActiveDataById($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('h.id', ':id')
        ))
        ->setParameter('id',$id)
        ;
        return $qb;
    }
}
