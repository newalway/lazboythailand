<?php

namespace ProjectBundle\Repository;

/**
 * VideosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideosRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllData($arr_query_data=false)
    {
        $qb = $this->createQueryBuilder('v')
                ->orderBy('v.position', 'ASC')
                ->addOrderBy('v.publicDate', 'DESC')
                ->addOrderBy('v.createdAt', 'DESC');
        $q = $arr_query_data['q'];
        if($q){
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('v.title', ':query'),
                $qb->expr()->like('v.shortDesc', ':query'),
                $qb->expr()->like('v.description', ':query')
            ))
            ->setParameter('query', '%'.$q.'%');
        }
        return $qb;
    }

    public function findAllActiveData()
    {
        $qb = $this->findAllData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('v.status', ':status'),
            $qb->expr()->lte('v.publicDate', ':publicdate')
        ))
        ->setParameter('status',1)
        ->setParameter('publicdate',date('Y-m-d'))
        ;
        return $qb;
    }

    public function getActiveDataByRecent($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->notLike('v.id', ':id')
        ))
        ->setParameter('id', $id);
        return $qb;
    }

    public function getActiveDataById($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('v.id', ':id')
        ))
        ->setParameter('id',$id)
        ;
        return $qb;
    }
}
