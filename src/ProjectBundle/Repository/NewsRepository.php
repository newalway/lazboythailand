<?php

namespace ProjectBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Intl\Locale;

/**
 * NewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllData($arr_query_data=false, $locale=false)
    {
        $locale = ($locale) ? $locale : Locale::getDefault();

        $qb = $this->createQueryBuilder('n')
                ->select('n', 'nt', 'nc', 'nct')
                ->join('n.translations', 'nt')
                ->leftjoin('n.newsCategory', 'nc')
                ->leftjoin('nc.translations', 'nct', "WITH", "nct.locale=:locale")
                ->orderBy('n.isHighlight', 'DESC')
                ->addOrderBy('n.position', 'ASC')
                ->addOrderBy('n.publicDate', 'DESC')
                ->addOrderBy('n.createdAt', 'DESC')
                ->setParameter('locale', $locale);

        if(isset($arr_query_data['q']) && $arr_query_data['q']){
            $qb->where($qb->expr()->orX(
                $qb->expr()->like('nt.title', ':query'),
                $qb->expr()->like('nt.shortDesc', ':query'),
                $qb->expr()->like('nt.description', ':query')
            ))
            ->setParameter('query', '%'.$arr_query_data['q'].'%');
        }

        if(isset($arr_query_data['category_id']) && !empty($arr_query_data['category_id']))
        {
            $qb->andWhere($qb->expr()->orX(
                $qb->expr()->in('nc.id',':nc_id')
            ))
            ->setParameter('nc_id', $arr_query_data['category_id']);
        }

        if(isset($arr_query_data['is_highlight'])){
            $qb->andWhere('n.isHighlight = '.$arr_query_data['is_highlight']);
        }

        if( isset($arr_query_data['news_category_id']) && !empty($arr_query_data['news_category_id']) ){
            $qb->andWhere($qb->expr()->orX(
                $qb->expr()->in('nc.id',':nc_id')
            ))
            ->setParameter('nc_id', $arr_query_data['news_category_id']);
        }

        return $qb;
    }

    public function findAllActiveData($arr_query_data=false)
    {
        $qb = $this->findAllData($arr_query_data);

        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('n.status', ':status'),
            $qb->expr()->lte('n.publicDate', ':publicdate')
        ))
        ->setParameter('status',1)
        ->setParameter('publicdate',date('Y-m-d'));

        /*if($cate_id){
            $qb->andWhere($qb->expr()->andX(
                $qb->expr()->like('nc.id', ':cate_id')
            ))
            ->setParameter('cate_id',$cate_id);
        }*/

        return $qb;
    }

    public function findAllActiveDataIsTop()
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere('n.isHighlight = 1');
        return $qb;
    }

    public function getActiveDataByRecent($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->notLike('n.id', ':id')
        ))
        ->setParameter('id', $id);
        return $qb;
    }

    public function getActiveDataById($id)
    {
        $qb = $this->findAllActiveData();
        $qb->andWhere($qb->expr()->andX(
            $qb->expr()->like('n.id', ':id')
        ))
        ->setParameter('id',$id)
        ;
        return $qb;
    }
}
